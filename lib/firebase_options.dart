// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
///
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDJv7am8SsjkTj14r4PV0u2NMo6BILlFxg',
    appId: '1:365629299485:android:1cd4568beeb7f95e04dff4',
    messagingSenderId: '365629299485',
    projectId: 'app-incontrol',
    storageBucket: 'app-incontrol.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyBXSrh9rWV0pgX2uW4yVLBGykOjLDdljUE',
    appId: '1:365629299485:ios:c5f63d4d1234bc7704dff4',
    messagingSenderId: '365629299485',
    projectId: 'app-incontrol',
    storageBucket: 'app-incontrol.appspot.com',
    iosClientId:
        '365629299485-d6a3v0v8s3jc9pncdu8ia5ijgjpfn70n.apps.googleusercontent.com',
    iosBundleId: 'com.incontrol.dev',
  );
}

class DevFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyAtFSCtzfBssJUPXNZGVCurf_DErpNVitg',
    appId: '1:322084002112:web:2766aca143916ecbd402a5',
    messagingSenderId: '322084002112',
    projectId: 'cryptopaocal',
    authDomain: 'cryptopaocal.firebaseapp.com',
    storageBucket: 'cryptopaocal.appspot.com',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDl8t3tpN_hv1M9s1qWaK4w3IVvVuE1t1Y',
    appId: '1:322084002112:android:c54c5f0f4f001237d402a5',
    messagingSenderId: '322084002112',
    projectId: 'cryptopaocal',
    storageBucket: 'cryptopaocal.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyBehnVfaPp0qv28s9i8AsOKiJPLxdHMhH4',
    appId: '1:322084002112:ios:f2a3a103de5aa5f8d402a5',
    messagingSenderId: '322084002112',
    projectId: 'cryptopaocal',
    storageBucket: 'cryptopaocal.appspot.com',
    iosClientId:
        '322084002112-iq30qp19a0cuuvjurp7ckkivflv4801o.apps.googleusercontent.com',
    iosBundleId: 'com.example.incontrolFlutter',
  );
}
